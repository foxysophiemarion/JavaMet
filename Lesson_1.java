/*
 * СТРУКТУРА ПРОГРАММЫ - ПЕРЕМЕННЫЕ И КОНСТАНТЫ - ТИПЫ ДАННЫХ
 */

// Структура программы
/*
 * многострочный комментарий
 * Объявление нового класса,
 * который содержит код программы
 */

//////////////////////////////////////////////////////////////

/*
 * public class Lesson_1 { // начало объявления класса Lesson_1
 * 
 * 
 * // определение метода main
 * public static void main(String args[]) { // объявление нового метода
 * int x, y;
 * x = 10;
 * y = 25;
 * // int x=8,y=15;
 * System.out.println(x); // вывод строки на консоль
 * System.out.println(y); // вывод строки на консоль
 * } // конец объявления нового метода
 * } // конец объявления класса Lesson_1
 */

///////////////////////////////////////////////////////////////

// ПЕРЕМЕННЫЕ
/*
 * Переменные объявляются следующим образом:
 * 
 * тип_данных имя_переменной;
 * 
 * Например, определим переменную, которая будет называться x и будет иметь тип
 * int:
 * int x;
 */

///////////////////////////////////////////////////////////////
/*
 * public class Lesson_1 {
 * public static void main(String args[]) { // объявление нового метода
 * var x = 10;
 * System.out.println(x);
 * }
 * }
 */

/*
 * var x; // ! Ошибка, переменная не инициализирована
 * x = 10;
 */

////////////////////////////////////////////////////////////////

// КОНСТАНТЫ
/*
 * Кроме переменных, в Java для хранения данных можно использовать константы. В
 * отличие от переменных константам можно присвоить значение только один раз.
 * Константа объявляется также, как и переменная, только вначале идет ключевое
 * слово final:
 */
/*
 * public class Lesson_1 {
 * public static void main(String args[]) { // объявление нового метода
 * final int LIMIT = 3;
 * System.out.println(LIMIT);
 * }
 * }
 */

/////////////////////////////////////////////////////////////////////

// ТИПЫ ДАННЫХ

/*
 * boolean: хранит значение true или false
 * boolean isActive = false;
 * boolean isAlive = true;
 * 
 * byte: хранит целое число от -128 до 127 и занимает 1 байт
 * byte a = 3;
 * byte b = 8;
 * 
 * short: хранит целое число от -32768 до 32767 и занимает 2 байта
 * short a = 3;
 * short b = 8;
 * 
 * int: хранит целое число от -2147483648 до 2147483647 и занимает 4 байта
 * int a = 4;
 * int b = 9;
 * 
 * long: хранит целое число от –9 223 372 036 854 775 808 до 9 223 372 036 854
 * 775 807 и занимает 8 байт
 * long a = 5;
 * long b = 10;
 * 
 * double: хранит число с плавающей точкой от ±4.9*10-324 до
 * ±1.7976931348623157*10308 и занимает 8 байт
 * double x = 8.5;
 * double y = 2.7;
 * 
 * В качестве разделителя целой и дробной части в дробных литералах используется
 * точка.
 * 
 * float: хранит число с плавающей точкой от -3.4*1038 до 3.4*1038 и занимает 4
 * байта
 * float x = 8.5F;
 * float y = 2.7F;
 * char: хранит одиночный символ в кодировке UTF-16 и занимает 2 байта, поэтому
 * диапазон хранимых значений от 0 до 65535
 */

// public class Lesson_2 {
// public static void main(String args[]) {
// // long num = 2147483649L;
// // System.out.println(num);
// // int num111 = 0x6F; // 16-теричная система, число 111
// // int num8 = 010; // 8-ричная система, число 8
// // int num13 = 0b1101; // 2-ичная система, число 13
// // System.out.println(num111);
// // System.out.println(num8);
// // System.out.println(num13);
// // int x = 123_456; // разделение разрядов числа с помощью знака
// подчеркивания
// // int y = 234_567__789; // разделение разрядов числа с помощью знака
// // подчеркивания
// // System.out.println(x); // 123456
// // System.out.println(y); // 234567789

// /// Числа с плавающей точкой
// // float fl = 30.6f;
// // double db = 30.6;
// // System.out.println(fl);
// // System.out.println(db);

// // Символы
// // char ch = 102; // символ 'f'
// // char ch1 = '\u0066'; // символ 'f'
// // System.out.println(ch);
// // System.out.println(ch1);

// // Строки
// // String hello = "Hello...";
// // System.out.println(hello);

// // Управляющая последовательность
// // String text = "Hello \nworld"; // \n-перевод на следующую строку
// // System.out.println(text);
// //
// // String text = "Вот мысль, которой весь я предан,\n" +
// // "Итог всего, что ум скопил.\n" +
// // "Лишь тот, кем бой за жизнь изведан,\n" +
// // "Жизнь и свободу заслужил.";
// // System.out.println(text);

// /*
// * Текстовые блоки, которые появились в JDK15, позволяют упростить написание
// * многострочного текста:
// */
// // String text = """
// // Вот мысль, которой весь я предан,
// // Итог всего, что ум скопил.
// // Лишь тот, кем бой за жизнь изведан,
// // Жизнь и свободу заслужил.
// // """;
// // System.out.println(text);
// //
